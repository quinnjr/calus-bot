/* 
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.7.1
 * Contact: support@bungie.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct DestinyDefinitionsDestinyGearArtArrangementReference {
  #[serde(rename = "classHash")]
  class_hash: Option<i32>,
  #[serde(rename = "artArrangementHash")]
  art_arrangement_hash: Option<i32>
}

impl DestinyDefinitionsDestinyGearArtArrangementReference {
  pub fn new() -> DestinyDefinitionsDestinyGearArtArrangementReference {
    DestinyDefinitionsDestinyGearArtArrangementReference {
      class_hash: None,
      art_arrangement_hash: None
    }
  }

  pub fn set_class_hash(&mut self, class_hash: i32) {
    self.class_hash = Some(class_hash);
  }

  pub fn with_class_hash(mut self, class_hash: i32) -> DestinyDefinitionsDestinyGearArtArrangementReference {
    self.class_hash = Some(class_hash);
    self
  }

  pub fn class_hash(&self) -> Option<&i32> {
    self.class_hash.as_ref()
  }

  pub fn reset_class_hash(&mut self) {
    self.class_hash = None;
  }

  pub fn set_art_arrangement_hash(&mut self, art_arrangement_hash: i32) {
    self.art_arrangement_hash = Some(art_arrangement_hash);
  }

  pub fn with_art_arrangement_hash(mut self, art_arrangement_hash: i32) -> DestinyDefinitionsDestinyGearArtArrangementReference {
    self.art_arrangement_hash = Some(art_arrangement_hash);
    self
  }

  pub fn art_arrangement_hash(&self) -> Option<&i32> {
    self.art_arrangement_hash.as_ref()
  }

  pub fn reset_art_arrangement_hash(&mut self) {
    self.art_arrangement_hash = None;
  }

}



