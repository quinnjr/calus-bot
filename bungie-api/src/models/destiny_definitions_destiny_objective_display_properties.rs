/* 
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.7.1
 * Contact: support@bungie.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct DestinyDefinitionsDestinyObjectiveDisplayProperties {
  /// The activity associated with this objective in the context of this item, if any.
  #[serde(rename = "activityHash")]
  activity_hash: Option<i32>,
  /// If true, the game shows this objective on item preview screens.
  #[serde(rename = "displayOnItemPreviewScreen")]
  display_on_item_preview_screen: Option<bool>
}

impl DestinyDefinitionsDestinyObjectiveDisplayProperties {
  pub fn new() -> DestinyDefinitionsDestinyObjectiveDisplayProperties {
    DestinyDefinitionsDestinyObjectiveDisplayProperties {
      activity_hash: None,
      display_on_item_preview_screen: None
    }
  }

  pub fn set_activity_hash(&mut self, activity_hash: i32) {
    self.activity_hash = Some(activity_hash);
  }

  pub fn with_activity_hash(mut self, activity_hash: i32) -> DestinyDefinitionsDestinyObjectiveDisplayProperties {
    self.activity_hash = Some(activity_hash);
    self
  }

  pub fn activity_hash(&self) -> Option<&i32> {
    self.activity_hash.as_ref()
  }

  pub fn reset_activity_hash(&mut self) {
    self.activity_hash = None;
  }

  pub fn set_display_on_item_preview_screen(&mut self, display_on_item_preview_screen: bool) {
    self.display_on_item_preview_screen = Some(display_on_item_preview_screen);
  }

  pub fn with_display_on_item_preview_screen(mut self, display_on_item_preview_screen: bool) -> DestinyDefinitionsDestinyObjectiveDisplayProperties {
    self.display_on_item_preview_screen = Some(display_on_item_preview_screen);
    self
  }

  pub fn display_on_item_preview_screen(&self) -> Option<&bool> {
    self.display_on_item_preview_screen.as_ref()
  }

  pub fn reset_display_on_item_preview_screen(&mut self) {
    self.display_on_item_preview_screen = None;
  }

}



