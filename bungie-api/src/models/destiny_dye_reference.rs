/* 
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.7.1
 * Contact: support@bungie.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct DestinyDyeReference {
  #[serde(rename = "channelHash")]
  channel_hash: Option<i32>,
  #[serde(rename = "dyeHash")]
  dye_hash: Option<i32>
}

impl DestinyDyeReference {
  pub fn new() -> DestinyDyeReference {
    DestinyDyeReference {
      channel_hash: None,
      dye_hash: None
    }
  }

  pub fn set_channel_hash(&mut self, channel_hash: i32) {
    self.channel_hash = Some(channel_hash);
  }

  pub fn with_channel_hash(mut self, channel_hash: i32) -> DestinyDyeReference {
    self.channel_hash = Some(channel_hash);
    self
  }

  pub fn channel_hash(&self) -> Option<&i32> {
    self.channel_hash.as_ref()
  }

  pub fn reset_channel_hash(&mut self) {
    self.channel_hash = None;
  }

  pub fn set_dye_hash(&mut self, dye_hash: i32) {
    self.dye_hash = Some(dye_hash);
  }

  pub fn with_dye_hash(mut self, dye_hash: i32) -> DestinyDyeReference {
    self.dye_hash = Some(dye_hash);
    self
  }

  pub fn dye_hash(&self) -> Option<&i32> {
    self.dye_hash.as_ref()
  }

  pub fn reset_dye_hash(&mut self) {
    self.dye_hash = None;
  }

}



