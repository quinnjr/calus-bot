/* 
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.7.1
 * Contact: support@bungie.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct DestinyComponentsPresentationDestinyPresentationNodesComponent {
  #[serde(rename = "nodes")]
  nodes: Option<::std::collections::HashMap<String, ::models::DestinyComponentsPresentationDestinyPresentationNodeComponent>>
}

impl DestinyComponentsPresentationDestinyPresentationNodesComponent {
  pub fn new() -> DestinyComponentsPresentationDestinyPresentationNodesComponent {
    DestinyComponentsPresentationDestinyPresentationNodesComponent {
      nodes: None
    }
  }

  pub fn set_nodes(&mut self, nodes: ::std::collections::HashMap<String, ::models::DestinyComponentsPresentationDestinyPresentationNodeComponent>) {
    self.nodes = Some(nodes);
  }

  pub fn with_nodes(mut self, nodes: ::std::collections::HashMap<String, ::models::DestinyComponentsPresentationDestinyPresentationNodeComponent>) -> DestinyComponentsPresentationDestinyPresentationNodesComponent {
    self.nodes = Some(nodes);
    self
  }

  pub fn nodes(&self) -> Option<&::std::collections::HashMap<String, ::models::DestinyComponentsPresentationDestinyPresentationNodeComponent>> {
    self.nodes.as_ref()
  }

  pub fn reset_nodes(&mut self) {
    self.nodes = None;
  }

}



