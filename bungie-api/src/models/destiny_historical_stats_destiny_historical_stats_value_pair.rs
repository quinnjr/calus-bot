/* 
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.7.1
 * Contact: support@bungie.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct DestinyHistoricalStatsDestinyHistoricalStatsValuePair {
  /// Raw value of the statistic
  #[serde(rename = "value")]
  value: Option<f64>,
  /// Localized formated version of the value.
  #[serde(rename = "displayValue")]
  display_value: Option<String>
}

impl DestinyHistoricalStatsDestinyHistoricalStatsValuePair {
  pub fn new() -> DestinyHistoricalStatsDestinyHistoricalStatsValuePair {
    DestinyHistoricalStatsDestinyHistoricalStatsValuePair {
      value: None,
      display_value: None
    }
  }

  pub fn set_value(&mut self, value: f64) {
    self.value = Some(value);
  }

  pub fn with_value(mut self, value: f64) -> DestinyHistoricalStatsDestinyHistoricalStatsValuePair {
    self.value = Some(value);
    self
  }

  pub fn value(&self) -> Option<&f64> {
    self.value.as_ref()
  }

  pub fn reset_value(&mut self) {
    self.value = None;
  }

  pub fn set_display_value(&mut self, display_value: String) {
    self.display_value = Some(display_value);
  }

  pub fn with_display_value(mut self, display_value: String) -> DestinyHistoricalStatsDestinyHistoricalStatsValuePair {
    self.display_value = Some(display_value);
    self
  }

  pub fn display_value(&self) -> Option<&String> {
    self.display_value.as_ref()
  }

  pub fn reset_display_value(&mut self) {
    self.display_value = None;
  }

}



