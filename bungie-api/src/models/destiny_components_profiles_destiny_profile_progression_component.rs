/* 
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.7.1
 * Contact: support@bungie.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// DestinyComponentsProfilesDestinyProfileProgressionComponent : The set of progression-related information that applies at a Profile-wide level for your Destiny experience. This differs from the Jimi Hendrix Experience because there's less guitars on fire. Yet. #spoileralert?  This will include information such as Checklist info.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct DestinyComponentsProfilesDestinyProfileProgressionComponent {
  /// The set of checklists that can be examined on a profile-wide basis, keyed by the hash identifier of the Checklist (DestinyChecklistDefinition)  For each checklist returned, its value is itself a Dictionary keyed by the checklist's hash identifier with the value being a boolean indicating if it's been discovered yet.
  #[serde(rename = "checklists")]
  checklists: Option<::std::collections::HashMap<String, ::std::collections::HashMap<String, bool>>>,
  /// Data related to your progress on the current season's artifact that is the same across characters.
  #[serde(rename = "seasonalArtifact")]
  seasonal_artifact: Option<Value>
}

impl DestinyComponentsProfilesDestinyProfileProgressionComponent {
  /// The set of progression-related information that applies at a Profile-wide level for your Destiny experience. This differs from the Jimi Hendrix Experience because there's less guitars on fire. Yet. #spoileralert?  This will include information such as Checklist info.
  pub fn new() -> DestinyComponentsProfilesDestinyProfileProgressionComponent {
    DestinyComponentsProfilesDestinyProfileProgressionComponent {
      checklists: None,
      seasonal_artifact: None
    }
  }

  pub fn set_checklists(&mut self, checklists: ::std::collections::HashMap<String, ::std::collections::HashMap<String, bool>>) {
    self.checklists = Some(checklists);
  }

  pub fn with_checklists(mut self, checklists: ::std::collections::HashMap<String, ::std::collections::HashMap<String, bool>>) -> DestinyComponentsProfilesDestinyProfileProgressionComponent {
    self.checklists = Some(checklists);
    self
  }

  pub fn checklists(&self) -> Option<&::std::collections::HashMap<String, ::std::collections::HashMap<String, bool>>> {
    self.checklists.as_ref()
  }

  pub fn reset_checklists(&mut self) {
    self.checklists = None;
  }

  pub fn set_seasonal_artifact(&mut self, seasonal_artifact: Value) {
    self.seasonal_artifact = Some(seasonal_artifact);
  }

  pub fn with_seasonal_artifact(mut self, seasonal_artifact: Value) -> DestinyComponentsProfilesDestinyProfileProgressionComponent {
    self.seasonal_artifact = Some(seasonal_artifact);
    self
  }

  pub fn seasonal_artifact(&self) -> Option<&Value> {
    self.seasonal_artifact.as_ref()
  }

  pub fn reset_seasonal_artifact(&mut self) {
    self.seasonal_artifact = None;
  }

}



