/* 
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.7.1
 * Contact: support@bungie.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// DestinyDefinitionsDestinyTalentNodeExclusiveSetDefinition : The list of indexes into the Talent Grid's \"nodes\" property for nodes in this exclusive set. (See DestinyTalentNodeDefinition.nodeIndex)

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct DestinyDefinitionsDestinyTalentNodeExclusiveSetDefinition {
  /// The list of node indexes for the exclusive set. Historically, these were indexes. I would have liked to replace this with nodeHashes for consistency, but it's way too late for that. (9:09 PM, he's right!)
  #[serde(rename = "nodeIndexes")]
  node_indexes: Option<Vec<i32>>
}

impl DestinyDefinitionsDestinyTalentNodeExclusiveSetDefinition {
  /// The list of indexes into the Talent Grid's \"nodes\" property for nodes in this exclusive set. (See DestinyTalentNodeDefinition.nodeIndex)
  pub fn new() -> DestinyDefinitionsDestinyTalentNodeExclusiveSetDefinition {
    DestinyDefinitionsDestinyTalentNodeExclusiveSetDefinition {
      node_indexes: None
    }
  }

  pub fn set_node_indexes(&mut self, node_indexes: Vec<i32>) {
    self.node_indexes = Some(node_indexes);
  }

  pub fn with_node_indexes(mut self, node_indexes: Vec<i32>) -> DestinyDefinitionsDestinyTalentNodeExclusiveSetDefinition {
    self.node_indexes = Some(node_indexes);
    self
  }

  pub fn node_indexes(&self) -> Option<&Vec<i32>> {
    self.node_indexes.as_ref()
  }

  pub fn reset_node_indexes(&mut self) {
    self.node_indexes = None;
  }

}



