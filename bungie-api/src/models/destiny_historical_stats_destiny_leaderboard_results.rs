/* 
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.7.1
 * Contact: support@bungie.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct DestinyHistoricalStatsDestinyLeaderboardResults {
  /// Indicate the membership ID of the account that is the focal point of the provided leaderboards.
  #[serde(rename = "focusMembershipId")]
  focus_membership_id: Option<i64>,
  /// Indicate the character ID of the character that is the focal point of the provided leaderboards. May be null, in which case any character from the focus membership can appear in the provided leaderboards.
  #[serde(rename = "focusCharacterId")]
  focus_character_id: Option<i64>
}

impl DestinyHistoricalStatsDestinyLeaderboardResults {
  pub fn new() -> DestinyHistoricalStatsDestinyLeaderboardResults {
    DestinyHistoricalStatsDestinyLeaderboardResults {
      focus_membership_id: None,
      focus_character_id: None
    }
  }

  pub fn set_focus_membership_id(&mut self, focus_membership_id: i64) {
    self.focus_membership_id = Some(focus_membership_id);
  }

  pub fn with_focus_membership_id(mut self, focus_membership_id: i64) -> DestinyHistoricalStatsDestinyLeaderboardResults {
    self.focus_membership_id = Some(focus_membership_id);
    self
  }

  pub fn focus_membership_id(&self) -> Option<&i64> {
    self.focus_membership_id.as_ref()
  }

  pub fn reset_focus_membership_id(&mut self) {
    self.focus_membership_id = None;
  }

  pub fn set_focus_character_id(&mut self, focus_character_id: i64) {
    self.focus_character_id = Some(focus_character_id);
  }

  pub fn with_focus_character_id(mut self, focus_character_id: i64) -> DestinyHistoricalStatsDestinyLeaderboardResults {
    self.focus_character_id = Some(focus_character_id);
    self
  }

  pub fn focus_character_id(&self) -> Option<&i64> {
    self.focus_character_id.as_ref()
  }

  pub fn reset_focus_character_id(&mut self) {
    self.focus_character_id = None;
  }

}



