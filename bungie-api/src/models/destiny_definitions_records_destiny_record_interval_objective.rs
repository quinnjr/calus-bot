/* 
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.7.1
 * Contact: support@bungie.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct DestinyDefinitionsRecordsDestinyRecordIntervalObjective {
  #[serde(rename = "intervalObjectiveHash")]
  interval_objective_hash: Option<i32>,
  #[serde(rename = "intervalScoreValue")]
  interval_score_value: Option<i32>
}

impl DestinyDefinitionsRecordsDestinyRecordIntervalObjective {
  pub fn new() -> DestinyDefinitionsRecordsDestinyRecordIntervalObjective {
    DestinyDefinitionsRecordsDestinyRecordIntervalObjective {
      interval_objective_hash: None,
      interval_score_value: None
    }
  }

  pub fn set_interval_objective_hash(&mut self, interval_objective_hash: i32) {
    self.interval_objective_hash = Some(interval_objective_hash);
  }

  pub fn with_interval_objective_hash(mut self, interval_objective_hash: i32) -> DestinyDefinitionsRecordsDestinyRecordIntervalObjective {
    self.interval_objective_hash = Some(interval_objective_hash);
    self
  }

  pub fn interval_objective_hash(&self) -> Option<&i32> {
    self.interval_objective_hash.as_ref()
  }

  pub fn reset_interval_objective_hash(&mut self) {
    self.interval_objective_hash = None;
  }

  pub fn set_interval_score_value(&mut self, interval_score_value: i32) {
    self.interval_score_value = Some(interval_score_value);
  }

  pub fn with_interval_score_value(mut self, interval_score_value: i32) -> DestinyDefinitionsRecordsDestinyRecordIntervalObjective {
    self.interval_score_value = Some(interval_score_value);
    self
  }

  pub fn interval_score_value(&self) -> Option<&i32> {
    self.interval_score_value.as_ref()
  }

  pub fn reset_interval_score_value(&mut self) {
    self.interval_score_value = None;
  }

}



