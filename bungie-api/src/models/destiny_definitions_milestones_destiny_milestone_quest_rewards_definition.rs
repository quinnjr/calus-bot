/* 
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.7.1
 * Contact: support@bungie.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// DestinyDefinitionsMilestonesDestinyMilestoneQuestRewardsDefinition : If rewards are given in a quest - as opposed to overall in the entire Milestone - there's way less to track. We're going to simplify this contract as a result. However, this also gives us the opportunity to potentially put more than just item information into the reward data if we're able to mine it out in the future. Remember this if you come back and ask \"why are quest reward items nested inside of their own class?\"

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct DestinyDefinitionsMilestonesDestinyMilestoneQuestRewardsDefinition {
  /// The items that represent your reward for completing the quest.  Be warned, these could be \"dummy\" items: items that are only used to render a good-looking in-game tooltip, but aren't the actual items themselves.  For instance, when experience is given there's often a dummy item representing \"experience\", with quantity being the amount of experience you got. We don't have a programmatic association between those and whatever Progression is actually getting that experience... yet.
  #[serde(rename = "items")]
  items: Option<Vec<::models::DestinyDefinitionsMilestonesDestinyMilestoneQuestRewardItem>>
}

impl DestinyDefinitionsMilestonesDestinyMilestoneQuestRewardsDefinition {
  /// If rewards are given in a quest - as opposed to overall in the entire Milestone - there's way less to track. We're going to simplify this contract as a result. However, this also gives us the opportunity to potentially put more than just item information into the reward data if we're able to mine it out in the future. Remember this if you come back and ask \"why are quest reward items nested inside of their own class?\"
  pub fn new() -> DestinyDefinitionsMilestonesDestinyMilestoneQuestRewardsDefinition {
    DestinyDefinitionsMilestonesDestinyMilestoneQuestRewardsDefinition {
      items: None
    }
  }

  pub fn set_items(&mut self, items: Vec<::models::DestinyDefinitionsMilestonesDestinyMilestoneQuestRewardItem>) {
    self.items = Some(items);
  }

  pub fn with_items(mut self, items: Vec<::models::DestinyDefinitionsMilestonesDestinyMilestoneQuestRewardItem>) -> DestinyDefinitionsMilestonesDestinyMilestoneQuestRewardsDefinition {
    self.items = Some(items);
    self
  }

  pub fn items(&self) -> Option<&Vec<::models::DestinyDefinitionsMilestonesDestinyMilestoneQuestRewardItem>> {
    self.items.as_ref()
  }

  pub fn reset_items(&mut self) {
    self.items = None;
  }

}



