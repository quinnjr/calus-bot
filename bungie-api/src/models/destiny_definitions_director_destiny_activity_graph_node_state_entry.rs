/* 
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.7.1
 * Contact: support@bungie.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// DestinyDefinitionsDirectorDestinyActivityGraphNodeStateEntry : Represents a single state that a graph node might end up in. Depending on what's going on in the game, graph nodes could be shown in different ways or even excluded from view entirely.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct DestinyDefinitionsDirectorDestinyActivityGraphNodeStateEntry {
  #[serde(rename = "state")]
  state: Option<i32>
}

impl DestinyDefinitionsDirectorDestinyActivityGraphNodeStateEntry {
  /// Represents a single state that a graph node might end up in. Depending on what's going on in the game, graph nodes could be shown in different ways or even excluded from view entirely.
  pub fn new() -> DestinyDefinitionsDirectorDestinyActivityGraphNodeStateEntry {
    DestinyDefinitionsDirectorDestinyActivityGraphNodeStateEntry {
      state: None
    }
  }

  pub fn set_state(&mut self, state: i32) {
    self.state = Some(state);
  }

  pub fn with_state(mut self, state: i32) -> DestinyDefinitionsDirectorDestinyActivityGraphNodeStateEntry {
    self.state = Some(state);
    self
  }

  pub fn state(&self) -> Option<&i32> {
    self.state.as_ref()
  }

  pub fn reset_state(&mut self) {
    self.state = None;
  }

}



