/* 
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.7.1
 * Contact: support@bungie.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct DestinyAdvancedAwaPermissionRequested {
  /// Type of advanced write action.
  #[serde(rename = "type")]
  _type: Option<i32>,
  /// Item instance ID the action shall be applied to. This is optional for all but a new AwaType values. Rule of thumb is to provide the item instance ID if one is available.
  #[serde(rename = "affectedItemId")]
  affected_item_id: Option<i64>,
  /// Destiny membership type of the account to modify.
  #[serde(rename = "membershipType")]
  membership_type: Option<i32>,
  /// Destiny character ID, if applicable, that will be affected by the action.
  #[serde(rename = "characterId")]
  character_id: Option<i64>
}

impl DestinyAdvancedAwaPermissionRequested {
  pub fn new() -> DestinyAdvancedAwaPermissionRequested {
    DestinyAdvancedAwaPermissionRequested {
      _type: None,
      affected_item_id: None,
      membership_type: None,
      character_id: None
    }
  }

  pub fn set__type(&mut self, _type: i32) {
    self._type = Some(_type);
  }

  pub fn with__type(mut self, _type: i32) -> DestinyAdvancedAwaPermissionRequested {
    self._type = Some(_type);
    self
  }

  pub fn _type(&self) -> Option<&i32> {
    self._type.as_ref()
  }

  pub fn reset__type(&mut self) {
    self._type = None;
  }

  pub fn set_affected_item_id(&mut self, affected_item_id: i64) {
    self.affected_item_id = Some(affected_item_id);
  }

  pub fn with_affected_item_id(mut self, affected_item_id: i64) -> DestinyAdvancedAwaPermissionRequested {
    self.affected_item_id = Some(affected_item_id);
    self
  }

  pub fn affected_item_id(&self) -> Option<&i64> {
    self.affected_item_id.as_ref()
  }

  pub fn reset_affected_item_id(&mut self) {
    self.affected_item_id = None;
  }

  pub fn set_membership_type(&mut self, membership_type: i32) {
    self.membership_type = Some(membership_type);
  }

  pub fn with_membership_type(mut self, membership_type: i32) -> DestinyAdvancedAwaPermissionRequested {
    self.membership_type = Some(membership_type);
    self
  }

  pub fn membership_type(&self) -> Option<&i32> {
    self.membership_type.as_ref()
  }

  pub fn reset_membership_type(&mut self) {
    self.membership_type = None;
  }

  pub fn set_character_id(&mut self, character_id: i64) {
    self.character_id = Some(character_id);
  }

  pub fn with_character_id(mut self, character_id: i64) -> DestinyAdvancedAwaPermissionRequested {
    self.character_id = Some(character_id);
    self
  }

  pub fn character_id(&self) -> Option<&i64> {
    self.character_id.as_ref()
  }

  pub fn reset_character_id(&mut self) {
    self.character_id = None;
  }

}



