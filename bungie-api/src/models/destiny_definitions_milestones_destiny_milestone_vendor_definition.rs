/* 
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.7.1
 * Contact: support@bungie.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// DestinyDefinitionsMilestonesDestinyMilestoneVendorDefinition : If the Milestone or a component has vendors whose inventories could/should be displayed that are relevant to it, this will return the vendor in question.   It also contains information we need to determine whether that vendor is actually relevant at the moment, given the user's current state.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct DestinyDefinitionsMilestonesDestinyMilestoneVendorDefinition {
  /// The hash of the vendor whose wares should be shown as associated with the Milestone.
  #[serde(rename = "vendorHash")]
  vendor_hash: Option<i32>
}

impl DestinyDefinitionsMilestonesDestinyMilestoneVendorDefinition {
  /// If the Milestone or a component has vendors whose inventories could/should be displayed that are relevant to it, this will return the vendor in question.   It also contains information we need to determine whether that vendor is actually relevant at the moment, given the user's current state.
  pub fn new() -> DestinyDefinitionsMilestonesDestinyMilestoneVendorDefinition {
    DestinyDefinitionsMilestonesDestinyMilestoneVendorDefinition {
      vendor_hash: None
    }
  }

  pub fn set_vendor_hash(&mut self, vendor_hash: i32) {
    self.vendor_hash = Some(vendor_hash);
  }

  pub fn with_vendor_hash(mut self, vendor_hash: i32) -> DestinyDefinitionsMilestonesDestinyMilestoneVendorDefinition {
    self.vendor_hash = Some(vendor_hash);
    self
  }

  pub fn vendor_hash(&self) -> Option<&i32> {
    self.vendor_hash.as_ref()
  }

  pub fn reset_vendor_hash(&mut self) {
    self.vendor_hash = None;
  }

}



