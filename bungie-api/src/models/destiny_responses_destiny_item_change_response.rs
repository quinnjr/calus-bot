/* 
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.7.1
 * Contact: support@bungie.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct DestinyResponsesDestinyItemChangeResponse {
  #[serde(rename = "item")]
  item: Option<::models::DestinyResponsesDestinyItemResponse>,
  /// Items that appeared in the inventory possibly as a result of an action.
  #[serde(rename = "addedInventoryItems")]
  added_inventory_items: Option<Vec<::models::DestinyEntitiesItemsDestinyItemComponent>>,
  /// Items that disappeared from the inventory possibly as a result of an action.
  #[serde(rename = "removedInventoryItems")]
  removed_inventory_items: Option<Vec<::models::DestinyEntitiesItemsDestinyItemComponent>>
}

impl DestinyResponsesDestinyItemChangeResponse {
  pub fn new() -> DestinyResponsesDestinyItemChangeResponse {
    DestinyResponsesDestinyItemChangeResponse {
      item: None,
      added_inventory_items: None,
      removed_inventory_items: None
    }
  }

  pub fn set_item(&mut self, item: ::models::DestinyResponsesDestinyItemResponse) {
    self.item = Some(item);
  }

  pub fn with_item(mut self, item: ::models::DestinyResponsesDestinyItemResponse) -> DestinyResponsesDestinyItemChangeResponse {
    self.item = Some(item);
    self
  }

  pub fn item(&self) -> Option<&::models::DestinyResponsesDestinyItemResponse> {
    self.item.as_ref()
  }

  pub fn reset_item(&mut self) {
    self.item = None;
  }

  pub fn set_added_inventory_items(&mut self, added_inventory_items: Vec<::models::DestinyEntitiesItemsDestinyItemComponent>) {
    self.added_inventory_items = Some(added_inventory_items);
  }

  pub fn with_added_inventory_items(mut self, added_inventory_items: Vec<::models::DestinyEntitiesItemsDestinyItemComponent>) -> DestinyResponsesDestinyItemChangeResponse {
    self.added_inventory_items = Some(added_inventory_items);
    self
  }

  pub fn added_inventory_items(&self) -> Option<&Vec<::models::DestinyEntitiesItemsDestinyItemComponent>> {
    self.added_inventory_items.as_ref()
  }

  pub fn reset_added_inventory_items(&mut self) {
    self.added_inventory_items = None;
  }

  pub fn set_removed_inventory_items(&mut self, removed_inventory_items: Vec<::models::DestinyEntitiesItemsDestinyItemComponent>) {
    self.removed_inventory_items = Some(removed_inventory_items);
  }

  pub fn with_removed_inventory_items(mut self, removed_inventory_items: Vec<::models::DestinyEntitiesItemsDestinyItemComponent>) -> DestinyResponsesDestinyItemChangeResponse {
    self.removed_inventory_items = Some(removed_inventory_items);
    self
  }

  pub fn removed_inventory_items(&self) -> Option<&Vec<::models::DestinyEntitiesItemsDestinyItemComponent>> {
    self.removed_inventory_items.as_ref()
  }

  pub fn reset_removed_inventory_items(&mut self) {
    self.removed_inventory_items = None;
  }

}



