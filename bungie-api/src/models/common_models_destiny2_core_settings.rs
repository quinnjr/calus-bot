/* 
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.7.1
 * Contact: support@bungie.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct CommonModelsDestiny2CoreSettings {
  #[serde(rename = "collectionRootNode")]
  collection_root_node: Option<i32>,
  #[serde(rename = "badgesRootNode")]
  badges_root_node: Option<i32>,
  #[serde(rename = "recordsRootNode")]
  records_root_node: Option<i32>,
  #[serde(rename = "medalsRootNode")]
  medals_root_node: Option<i32>,
  #[serde(rename = "currentRankProgressionHashes")]
  current_rank_progression_hashes: Option<Vec<i32>>,
  #[serde(rename = "undiscoveredCollectibleImage")]
  undiscovered_collectible_image: Option<String>,
  #[serde(rename = "ammoTypeHeavyIcon")]
  ammo_type_heavy_icon: Option<String>,
  #[serde(rename = "ammoTypeSpecialIcon")]
  ammo_type_special_icon: Option<String>,
  #[serde(rename = "ammoTypePrimaryIcon")]
  ammo_type_primary_icon: Option<String>,
  #[serde(rename = "currentSeasonalArtifactHash")]
  current_seasonal_artifact_hash: Option<i32>,
  #[serde(rename = "currentSeasonHash")]
  current_season_hash: Option<i32>,
  #[serde(rename = "futureSeasonHashes")]
  future_season_hashes: Option<Vec<i32>>,
  #[serde(rename = "pastSeasonHashes")]
  past_season_hashes: Option<Vec<i32>>
}

impl CommonModelsDestiny2CoreSettings {
  pub fn new() -> CommonModelsDestiny2CoreSettings {
    CommonModelsDestiny2CoreSettings {
      collection_root_node: None,
      badges_root_node: None,
      records_root_node: None,
      medals_root_node: None,
      current_rank_progression_hashes: None,
      undiscovered_collectible_image: None,
      ammo_type_heavy_icon: None,
      ammo_type_special_icon: None,
      ammo_type_primary_icon: None,
      current_seasonal_artifact_hash: None,
      current_season_hash: None,
      future_season_hashes: None,
      past_season_hashes: None
    }
  }

  pub fn set_collection_root_node(&mut self, collection_root_node: i32) {
    self.collection_root_node = Some(collection_root_node);
  }

  pub fn with_collection_root_node(mut self, collection_root_node: i32) -> CommonModelsDestiny2CoreSettings {
    self.collection_root_node = Some(collection_root_node);
    self
  }

  pub fn collection_root_node(&self) -> Option<&i32> {
    self.collection_root_node.as_ref()
  }

  pub fn reset_collection_root_node(&mut self) {
    self.collection_root_node = None;
  }

  pub fn set_badges_root_node(&mut self, badges_root_node: i32) {
    self.badges_root_node = Some(badges_root_node);
  }

  pub fn with_badges_root_node(mut self, badges_root_node: i32) -> CommonModelsDestiny2CoreSettings {
    self.badges_root_node = Some(badges_root_node);
    self
  }

  pub fn badges_root_node(&self) -> Option<&i32> {
    self.badges_root_node.as_ref()
  }

  pub fn reset_badges_root_node(&mut self) {
    self.badges_root_node = None;
  }

  pub fn set_records_root_node(&mut self, records_root_node: i32) {
    self.records_root_node = Some(records_root_node);
  }

  pub fn with_records_root_node(mut self, records_root_node: i32) -> CommonModelsDestiny2CoreSettings {
    self.records_root_node = Some(records_root_node);
    self
  }

  pub fn records_root_node(&self) -> Option<&i32> {
    self.records_root_node.as_ref()
  }

  pub fn reset_records_root_node(&mut self) {
    self.records_root_node = None;
  }

  pub fn set_medals_root_node(&mut self, medals_root_node: i32) {
    self.medals_root_node = Some(medals_root_node);
  }

  pub fn with_medals_root_node(mut self, medals_root_node: i32) -> CommonModelsDestiny2CoreSettings {
    self.medals_root_node = Some(medals_root_node);
    self
  }

  pub fn medals_root_node(&self) -> Option<&i32> {
    self.medals_root_node.as_ref()
  }

  pub fn reset_medals_root_node(&mut self) {
    self.medals_root_node = None;
  }

  pub fn set_current_rank_progression_hashes(&mut self, current_rank_progression_hashes: Vec<i32>) {
    self.current_rank_progression_hashes = Some(current_rank_progression_hashes);
  }

  pub fn with_current_rank_progression_hashes(mut self, current_rank_progression_hashes: Vec<i32>) -> CommonModelsDestiny2CoreSettings {
    self.current_rank_progression_hashes = Some(current_rank_progression_hashes);
    self
  }

  pub fn current_rank_progression_hashes(&self) -> Option<&Vec<i32>> {
    self.current_rank_progression_hashes.as_ref()
  }

  pub fn reset_current_rank_progression_hashes(&mut self) {
    self.current_rank_progression_hashes = None;
  }

  pub fn set_undiscovered_collectible_image(&mut self, undiscovered_collectible_image: String) {
    self.undiscovered_collectible_image = Some(undiscovered_collectible_image);
  }

  pub fn with_undiscovered_collectible_image(mut self, undiscovered_collectible_image: String) -> CommonModelsDestiny2CoreSettings {
    self.undiscovered_collectible_image = Some(undiscovered_collectible_image);
    self
  }

  pub fn undiscovered_collectible_image(&self) -> Option<&String> {
    self.undiscovered_collectible_image.as_ref()
  }

  pub fn reset_undiscovered_collectible_image(&mut self) {
    self.undiscovered_collectible_image = None;
  }

  pub fn set_ammo_type_heavy_icon(&mut self, ammo_type_heavy_icon: String) {
    self.ammo_type_heavy_icon = Some(ammo_type_heavy_icon);
  }

  pub fn with_ammo_type_heavy_icon(mut self, ammo_type_heavy_icon: String) -> CommonModelsDestiny2CoreSettings {
    self.ammo_type_heavy_icon = Some(ammo_type_heavy_icon);
    self
  }

  pub fn ammo_type_heavy_icon(&self) -> Option<&String> {
    self.ammo_type_heavy_icon.as_ref()
  }

  pub fn reset_ammo_type_heavy_icon(&mut self) {
    self.ammo_type_heavy_icon = None;
  }

  pub fn set_ammo_type_special_icon(&mut self, ammo_type_special_icon: String) {
    self.ammo_type_special_icon = Some(ammo_type_special_icon);
  }

  pub fn with_ammo_type_special_icon(mut self, ammo_type_special_icon: String) -> CommonModelsDestiny2CoreSettings {
    self.ammo_type_special_icon = Some(ammo_type_special_icon);
    self
  }

  pub fn ammo_type_special_icon(&self) -> Option<&String> {
    self.ammo_type_special_icon.as_ref()
  }

  pub fn reset_ammo_type_special_icon(&mut self) {
    self.ammo_type_special_icon = None;
  }

  pub fn set_ammo_type_primary_icon(&mut self, ammo_type_primary_icon: String) {
    self.ammo_type_primary_icon = Some(ammo_type_primary_icon);
  }

  pub fn with_ammo_type_primary_icon(mut self, ammo_type_primary_icon: String) -> CommonModelsDestiny2CoreSettings {
    self.ammo_type_primary_icon = Some(ammo_type_primary_icon);
    self
  }

  pub fn ammo_type_primary_icon(&self) -> Option<&String> {
    self.ammo_type_primary_icon.as_ref()
  }

  pub fn reset_ammo_type_primary_icon(&mut self) {
    self.ammo_type_primary_icon = None;
  }

  pub fn set_current_seasonal_artifact_hash(&mut self, current_seasonal_artifact_hash: i32) {
    self.current_seasonal_artifact_hash = Some(current_seasonal_artifact_hash);
  }

  pub fn with_current_seasonal_artifact_hash(mut self, current_seasonal_artifact_hash: i32) -> CommonModelsDestiny2CoreSettings {
    self.current_seasonal_artifact_hash = Some(current_seasonal_artifact_hash);
    self
  }

  pub fn current_seasonal_artifact_hash(&self) -> Option<&i32> {
    self.current_seasonal_artifact_hash.as_ref()
  }

  pub fn reset_current_seasonal_artifact_hash(&mut self) {
    self.current_seasonal_artifact_hash = None;
  }

  pub fn set_current_season_hash(&mut self, current_season_hash: i32) {
    self.current_season_hash = Some(current_season_hash);
  }

  pub fn with_current_season_hash(mut self, current_season_hash: i32) -> CommonModelsDestiny2CoreSettings {
    self.current_season_hash = Some(current_season_hash);
    self
  }

  pub fn current_season_hash(&self) -> Option<&i32> {
    self.current_season_hash.as_ref()
  }

  pub fn reset_current_season_hash(&mut self) {
    self.current_season_hash = None;
  }

  pub fn set_future_season_hashes(&mut self, future_season_hashes: Vec<i32>) {
    self.future_season_hashes = Some(future_season_hashes);
  }

  pub fn with_future_season_hashes(mut self, future_season_hashes: Vec<i32>) -> CommonModelsDestiny2CoreSettings {
    self.future_season_hashes = Some(future_season_hashes);
    self
  }

  pub fn future_season_hashes(&self) -> Option<&Vec<i32>> {
    self.future_season_hashes.as_ref()
  }

  pub fn reset_future_season_hashes(&mut self) {
    self.future_season_hashes = None;
  }

  pub fn set_past_season_hashes(&mut self, past_season_hashes: Vec<i32>) {
    self.past_season_hashes = Some(past_season_hashes);
  }

  pub fn with_past_season_hashes(mut self, past_season_hashes: Vec<i32>) -> CommonModelsDestiny2CoreSettings {
    self.past_season_hashes = Some(past_season_hashes);
    self
  }

  pub fn past_season_hashes(&self) -> Option<&Vec<i32>> {
    self.past_season_hashes.as_ref()
  }

  pub fn reset_past_season_hashes(&mut self) {
    self.past_season_hashes = None;
  }

}



