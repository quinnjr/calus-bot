/* 
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.7.1
 * Contact: support@bungie.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct DestinyDefinitionsCollectiblesDestinyCollectibleAcquisitionBlock {
  #[serde(rename = "acquireMaterialRequirementHash")]
  acquire_material_requirement_hash: Option<i32>,
  #[serde(rename = "acquireTimestampUnlockValueHash")]
  acquire_timestamp_unlock_value_hash: Option<i32>
}

impl DestinyDefinitionsCollectiblesDestinyCollectibleAcquisitionBlock {
  pub fn new() -> DestinyDefinitionsCollectiblesDestinyCollectibleAcquisitionBlock {
    DestinyDefinitionsCollectiblesDestinyCollectibleAcquisitionBlock {
      acquire_material_requirement_hash: None,
      acquire_timestamp_unlock_value_hash: None
    }
  }

  pub fn set_acquire_material_requirement_hash(&mut self, acquire_material_requirement_hash: i32) {
    self.acquire_material_requirement_hash = Some(acquire_material_requirement_hash);
  }

  pub fn with_acquire_material_requirement_hash(mut self, acquire_material_requirement_hash: i32) -> DestinyDefinitionsCollectiblesDestinyCollectibleAcquisitionBlock {
    self.acquire_material_requirement_hash = Some(acquire_material_requirement_hash);
    self
  }

  pub fn acquire_material_requirement_hash(&self) -> Option<&i32> {
    self.acquire_material_requirement_hash.as_ref()
  }

  pub fn reset_acquire_material_requirement_hash(&mut self) {
    self.acquire_material_requirement_hash = None;
  }

  pub fn set_acquire_timestamp_unlock_value_hash(&mut self, acquire_timestamp_unlock_value_hash: i32) {
    self.acquire_timestamp_unlock_value_hash = Some(acquire_timestamp_unlock_value_hash);
  }

  pub fn with_acquire_timestamp_unlock_value_hash(mut self, acquire_timestamp_unlock_value_hash: i32) -> DestinyDefinitionsCollectiblesDestinyCollectibleAcquisitionBlock {
    self.acquire_timestamp_unlock_value_hash = Some(acquire_timestamp_unlock_value_hash);
    self
  }

  pub fn acquire_timestamp_unlock_value_hash(&self) -> Option<&i32> {
    self.acquire_timestamp_unlock_value_hash.as_ref()
  }

  pub fn reset_acquire_timestamp_unlock_value_hash(&mut self) {
    self.acquire_timestamp_unlock_value_hash = None;
  }

}



