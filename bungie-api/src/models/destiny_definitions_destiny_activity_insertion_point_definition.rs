/* 
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.7.1
 * Contact: support@bungie.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// DestinyDefinitionsDestinyActivityInsertionPointDefinition : A point of entry into an activity, gated by an unlock flag and with some more-or-less useless (for our purposes) phase information. I'm including it in case we end up being able to bolt more useful information onto it in the future.  UPDATE: Turns out this information isn't actually useless, and is in fact actually useful for people. Who would have thought? We still don't have localized info for it, but at least this will help people when they're looking at phase indexes in stats data, or when they want to know what phases have been completed on a weekly achievement.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct DestinyDefinitionsDestinyActivityInsertionPointDefinition {
  /// A unique hash value representing the phase. This can be useful for, for example, comparing how different instances of Raids have phases in different orders!
  #[serde(rename = "phaseHash")]
  phase_hash: Option<i32>
}

impl DestinyDefinitionsDestinyActivityInsertionPointDefinition {
  /// A point of entry into an activity, gated by an unlock flag and with some more-or-less useless (for our purposes) phase information. I'm including it in case we end up being able to bolt more useful information onto it in the future.  UPDATE: Turns out this information isn't actually useless, and is in fact actually useful for people. Who would have thought? We still don't have localized info for it, but at least this will help people when they're looking at phase indexes in stats data, or when they want to know what phases have been completed on a weekly achievement.
  pub fn new() -> DestinyDefinitionsDestinyActivityInsertionPointDefinition {
    DestinyDefinitionsDestinyActivityInsertionPointDefinition {
      phase_hash: None
    }
  }

  pub fn set_phase_hash(&mut self, phase_hash: i32) {
    self.phase_hash = Some(phase_hash);
  }

  pub fn with_phase_hash(mut self, phase_hash: i32) -> DestinyDefinitionsDestinyActivityInsertionPointDefinition {
    self.phase_hash = Some(phase_hash);
    self
  }

  pub fn phase_hash(&self) -> Option<&i32> {
    self.phase_hash.as_ref()
  }

  pub fn reset_phase_hash(&mut self) {
    self.phase_hash = None;
  }

}



