/* 
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.7.1
 * Contact: support@bungie.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// DestinyDefinitionsDestinyVendorSaleItemActionBlockDefinition : Not terribly useful, some basic cooldown interaction info.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct DestinyDefinitionsDestinyVendorSaleItemActionBlockDefinition {
  #[serde(rename = "executeSeconds")]
  execute_seconds: Option<f32>,
  #[serde(rename = "isPositive")]
  is_positive: Option<bool>
}

impl DestinyDefinitionsDestinyVendorSaleItemActionBlockDefinition {
  /// Not terribly useful, some basic cooldown interaction info.
  pub fn new() -> DestinyDefinitionsDestinyVendorSaleItemActionBlockDefinition {
    DestinyDefinitionsDestinyVendorSaleItemActionBlockDefinition {
      execute_seconds: None,
      is_positive: None
    }
  }

  pub fn set_execute_seconds(&mut self, execute_seconds: f32) {
    self.execute_seconds = Some(execute_seconds);
  }

  pub fn with_execute_seconds(mut self, execute_seconds: f32) -> DestinyDefinitionsDestinyVendorSaleItemActionBlockDefinition {
    self.execute_seconds = Some(execute_seconds);
    self
  }

  pub fn execute_seconds(&self) -> Option<&f32> {
    self.execute_seconds.as_ref()
  }

  pub fn reset_execute_seconds(&mut self) {
    self.execute_seconds = None;
  }

  pub fn set_is_positive(&mut self, is_positive: bool) {
    self.is_positive = Some(is_positive);
  }

  pub fn with_is_positive(mut self, is_positive: bool) -> DestinyDefinitionsDestinyVendorSaleItemActionBlockDefinition {
    self.is_positive = Some(is_positive);
    self
  }

  pub fn is_positive(&self) -> Option<&bool> {
    self.is_positive.as_ref()
  }

  pub fn reset_is_positive(&mut self) {
    self.is_positive = None;
  }

}



