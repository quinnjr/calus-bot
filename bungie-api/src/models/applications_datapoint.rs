/* 
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.7.1
 * Contact: support@bungie.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ApplicationsDatapoint {
  /// Timestamp for the related count.
  #[serde(rename = "time")]
  time: Option<String>,
  /// Count associated with timestamp
  #[serde(rename = "count")]
  count: Option<f64>
}

impl ApplicationsDatapoint {
  pub fn new() -> ApplicationsDatapoint {
    ApplicationsDatapoint {
      time: None,
      count: None
    }
  }

  pub fn set_time(&mut self, time: String) {
    self.time = Some(time);
  }

  pub fn with_time(mut self, time: String) -> ApplicationsDatapoint {
    self.time = Some(time);
    self
  }

  pub fn time(&self) -> Option<&String> {
    self.time.as_ref()
  }

  pub fn reset_time(&mut self) {
    self.time = None;
  }

  pub fn set_count(&mut self, count: f64) {
    self.count = Some(count);
  }

  pub fn with_count(mut self, count: f64) -> ApplicationsDatapoint {
    self.count = Some(count);
    self
  }

  pub fn count(&self) -> Option<&f64> {
    self.count.as_ref()
  }

  pub fn reset_count(&mut self) {
    self.count = None;
  }

}



