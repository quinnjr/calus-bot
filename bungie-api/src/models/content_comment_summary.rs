/* 
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.7.1
 * Contact: support@bungie.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ContentCommentSummary {
  #[serde(rename = "topicId")]
  topic_id: Option<i64>,
  #[serde(rename = "commentCount")]
  comment_count: Option<i32>
}

impl ContentCommentSummary {
  pub fn new() -> ContentCommentSummary {
    ContentCommentSummary {
      topic_id: None,
      comment_count: None
    }
  }

  pub fn set_topic_id(&mut self, topic_id: i64) {
    self.topic_id = Some(topic_id);
  }

  pub fn with_topic_id(mut self, topic_id: i64) -> ContentCommentSummary {
    self.topic_id = Some(topic_id);
    self
  }

  pub fn topic_id(&self) -> Option<&i64> {
    self.topic_id.as_ref()
  }

  pub fn reset_topic_id(&mut self) {
    self.topic_id = None;
  }

  pub fn set_comment_count(&mut self, comment_count: i32) {
    self.comment_count = Some(comment_count);
  }

  pub fn with_comment_count(mut self, comment_count: i32) -> ContentCommentSummary {
    self.comment_count = Some(comment_count);
    self
  }

  pub fn comment_count(&self) -> Option<&i32> {
    self.comment_count.as_ref()
  }

  pub fn reset_comment_count(&mut self) {
    self.comment_count = None;
  }

}



