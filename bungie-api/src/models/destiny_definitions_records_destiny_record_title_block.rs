/* 
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.7.1
 * Contact: support@bungie.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct DestinyDefinitionsRecordsDestinyRecordTitleBlock {
  #[serde(rename = "hasTitle")]
  has_title: Option<bool>,
  #[serde(rename = "titlesByGender")]
  titles_by_gender: Option<::std::collections::HashMap<String, String>>,
  /// For those who prefer to use the definitions.
  #[serde(rename = "titlesByGenderHash")]
  titles_by_gender_hash: Option<::std::collections::HashMap<String, String>>
}

impl DestinyDefinitionsRecordsDestinyRecordTitleBlock {
  pub fn new() -> DestinyDefinitionsRecordsDestinyRecordTitleBlock {
    DestinyDefinitionsRecordsDestinyRecordTitleBlock {
      has_title: None,
      titles_by_gender: None,
      titles_by_gender_hash: None
    }
  }

  pub fn set_has_title(&mut self, has_title: bool) {
    self.has_title = Some(has_title);
  }

  pub fn with_has_title(mut self, has_title: bool) -> DestinyDefinitionsRecordsDestinyRecordTitleBlock {
    self.has_title = Some(has_title);
    self
  }

  pub fn has_title(&self) -> Option<&bool> {
    self.has_title.as_ref()
  }

  pub fn reset_has_title(&mut self) {
    self.has_title = None;
  }

  pub fn set_titles_by_gender(&mut self, titles_by_gender: ::std::collections::HashMap<String, String>) {
    self.titles_by_gender = Some(titles_by_gender);
  }

  pub fn with_titles_by_gender(mut self, titles_by_gender: ::std::collections::HashMap<String, String>) -> DestinyDefinitionsRecordsDestinyRecordTitleBlock {
    self.titles_by_gender = Some(titles_by_gender);
    self
  }

  pub fn titles_by_gender(&self) -> Option<&::std::collections::HashMap<String, String>> {
    self.titles_by_gender.as_ref()
  }

  pub fn reset_titles_by_gender(&mut self) {
    self.titles_by_gender = None;
  }

  pub fn set_titles_by_gender_hash(&mut self, titles_by_gender_hash: ::std::collections::HashMap<String, String>) {
    self.titles_by_gender_hash = Some(titles_by_gender_hash);
  }

  pub fn with_titles_by_gender_hash(mut self, titles_by_gender_hash: ::std::collections::HashMap<String, String>) -> DestinyDefinitionsRecordsDestinyRecordTitleBlock {
    self.titles_by_gender_hash = Some(titles_by_gender_hash);
    self
  }

  pub fn titles_by_gender_hash(&self) -> Option<&::std::collections::HashMap<String, String>> {
    self.titles_by_gender_hash.as_ref()
  }

  pub fn reset_titles_by_gender_hash(&mut self) {
    self.titles_by_gender_hash = None;
  }

}



