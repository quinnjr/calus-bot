/* 
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.7.1
 * Contact: support@bungie.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct DestinyDefinitionsCommonDestinyPositionDefinition {
  #[serde(rename = "x")]
  x: Option<i32>,
  #[serde(rename = "y")]
  y: Option<i32>,
  #[serde(rename = "z")]
  z: Option<i32>
}

impl DestinyDefinitionsCommonDestinyPositionDefinition {
  pub fn new() -> DestinyDefinitionsCommonDestinyPositionDefinition {
    DestinyDefinitionsCommonDestinyPositionDefinition {
      x: None,
      y: None,
      z: None
    }
  }

  pub fn set_x(&mut self, x: i32) {
    self.x = Some(x);
  }

  pub fn with_x(mut self, x: i32) -> DestinyDefinitionsCommonDestinyPositionDefinition {
    self.x = Some(x);
    self
  }

  pub fn x(&self) -> Option<&i32> {
    self.x.as_ref()
  }

  pub fn reset_x(&mut self) {
    self.x = None;
  }

  pub fn set_y(&mut self, y: i32) {
    self.y = Some(y);
  }

  pub fn with_y(mut self, y: i32) -> DestinyDefinitionsCommonDestinyPositionDefinition {
    self.y = Some(y);
    self
  }

  pub fn y(&self) -> Option<&i32> {
    self.y.as_ref()
  }

  pub fn reset_y(&mut self) {
    self.y = None;
  }

  pub fn set_z(&mut self, z: i32) {
    self.z = Some(z);
  }

  pub fn with_z(mut self, z: i32) -> DestinyDefinitionsCommonDestinyPositionDefinition {
    self.z = Some(z);
    self
  }

  pub fn z(&self) -> Option<&i32> {
    self.z.as_ref()
  }

  pub fn reset_z(&mut self) {
    self.z = None;
  }

}



