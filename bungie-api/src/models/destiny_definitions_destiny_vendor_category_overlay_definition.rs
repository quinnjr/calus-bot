/* 
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.7.1
 * Contact: support@bungie.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// DestinyDefinitionsDestinyVendorCategoryOverlayDefinition : The details of an overlay prompt to show to a user. They are all fairly self-explanatory localized strings that can be shown.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct DestinyDefinitionsDestinyVendorCategoryOverlayDefinition {
  #[serde(rename = "choiceDescription")]
  choice_description: Option<String>,
  #[serde(rename = "description")]
  description: Option<String>,
  #[serde(rename = "icon")]
  icon: Option<String>,
  #[serde(rename = "title")]
  title: Option<String>,
  /// If this overlay has a currency item that it features, this is said featured item.
  #[serde(rename = "currencyItemHash")]
  currency_item_hash: Option<i32>
}

impl DestinyDefinitionsDestinyVendorCategoryOverlayDefinition {
  /// The details of an overlay prompt to show to a user. They are all fairly self-explanatory localized strings that can be shown.
  pub fn new() -> DestinyDefinitionsDestinyVendorCategoryOverlayDefinition {
    DestinyDefinitionsDestinyVendorCategoryOverlayDefinition {
      choice_description: None,
      description: None,
      icon: None,
      title: None,
      currency_item_hash: None
    }
  }

  pub fn set_choice_description(&mut self, choice_description: String) {
    self.choice_description = Some(choice_description);
  }

  pub fn with_choice_description(mut self, choice_description: String) -> DestinyDefinitionsDestinyVendorCategoryOverlayDefinition {
    self.choice_description = Some(choice_description);
    self
  }

  pub fn choice_description(&self) -> Option<&String> {
    self.choice_description.as_ref()
  }

  pub fn reset_choice_description(&mut self) {
    self.choice_description = None;
  }

  pub fn set_description(&mut self, description: String) {
    self.description = Some(description);
  }

  pub fn with_description(mut self, description: String) -> DestinyDefinitionsDestinyVendorCategoryOverlayDefinition {
    self.description = Some(description);
    self
  }

  pub fn description(&self) -> Option<&String> {
    self.description.as_ref()
  }

  pub fn reset_description(&mut self) {
    self.description = None;
  }

  pub fn set_icon(&mut self, icon: String) {
    self.icon = Some(icon);
  }

  pub fn with_icon(mut self, icon: String) -> DestinyDefinitionsDestinyVendorCategoryOverlayDefinition {
    self.icon = Some(icon);
    self
  }

  pub fn icon(&self) -> Option<&String> {
    self.icon.as_ref()
  }

  pub fn reset_icon(&mut self) {
    self.icon = None;
  }

  pub fn set_title(&mut self, title: String) {
    self.title = Some(title);
  }

  pub fn with_title(mut self, title: String) -> DestinyDefinitionsDestinyVendorCategoryOverlayDefinition {
    self.title = Some(title);
    self
  }

  pub fn title(&self) -> Option<&String> {
    self.title.as_ref()
  }

  pub fn reset_title(&mut self) {
    self.title = None;
  }

  pub fn set_currency_item_hash(&mut self, currency_item_hash: i32) {
    self.currency_item_hash = Some(currency_item_hash);
  }

  pub fn with_currency_item_hash(mut self, currency_item_hash: i32) -> DestinyDefinitionsDestinyVendorCategoryOverlayDefinition {
    self.currency_item_hash = Some(currency_item_hash);
    self
  }

  pub fn currency_item_hash(&self) -> Option<&i32> {
    self.currency_item_hash.as_ref()
  }

  pub fn reset_currency_item_hash(&mut self) {
    self.currency_item_hash = None;
  }

}



