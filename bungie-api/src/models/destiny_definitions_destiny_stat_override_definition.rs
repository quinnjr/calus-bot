/* 
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.7.1
 * Contact: support@bungie.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// DestinyDefinitionsDestinyStatOverrideDefinition : Stat Groups (DestinyStatGroupDefinition) has the ability to override the localized text associated with stats that are to be shown on the items with which they are associated.  This defines a specific overridden stat. You could theoretically check these before rendering your stat UI, and for each stat that has an override show these displayProperties instead of those on the DestinyStatDefinition.  Or you could be like us, and skip that for now because the game has yet to actually use this feature. But know that it's here, waiting for a resilliant young designer to take up the mantle and make us all look foolish by showing the wrong name for stats.  Note that, if this gets used, the override will apply only to items using the overriding Stat Group. Other items will still show the default stat's name/description.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct DestinyDefinitionsDestinyStatOverrideDefinition {
  /// The hash identifier of the stat whose display properties are being overridden.
  #[serde(rename = "statHash")]
  stat_hash: Option<i32>,
  /// The display properties to show instead of the base DestinyStatDefinition display properties.
  #[serde(rename = "displayProperties")]
  display_properties: Option<Value>
}

impl DestinyDefinitionsDestinyStatOverrideDefinition {
  /// Stat Groups (DestinyStatGroupDefinition) has the ability to override the localized text associated with stats that are to be shown on the items with which they are associated.  This defines a specific overridden stat. You could theoretically check these before rendering your stat UI, and for each stat that has an override show these displayProperties instead of those on the DestinyStatDefinition.  Or you could be like us, and skip that for now because the game has yet to actually use this feature. But know that it's here, waiting for a resilliant young designer to take up the mantle and make us all look foolish by showing the wrong name for stats.  Note that, if this gets used, the override will apply only to items using the overriding Stat Group. Other items will still show the default stat's name/description.
  pub fn new() -> DestinyDefinitionsDestinyStatOverrideDefinition {
    DestinyDefinitionsDestinyStatOverrideDefinition {
      stat_hash: None,
      display_properties: None
    }
  }

  pub fn set_stat_hash(&mut self, stat_hash: i32) {
    self.stat_hash = Some(stat_hash);
  }

  pub fn with_stat_hash(mut self, stat_hash: i32) -> DestinyDefinitionsDestinyStatOverrideDefinition {
    self.stat_hash = Some(stat_hash);
    self
  }

  pub fn stat_hash(&self) -> Option<&i32> {
    self.stat_hash.as_ref()
  }

  pub fn reset_stat_hash(&mut self) {
    self.stat_hash = None;
  }

  pub fn set_display_properties(&mut self, display_properties: Value) {
    self.display_properties = Some(display_properties);
  }

  pub fn with_display_properties(mut self, display_properties: Value) -> DestinyDefinitionsDestinyStatOverrideDefinition {
    self.display_properties = Some(display_properties);
    self
  }

  pub fn display_properties(&self) -> Option<&Value> {
    self.display_properties.as_ref()
  }

  pub fn reset_display_properties(&mut self) {
    self.display_properties = None;
  }

}



