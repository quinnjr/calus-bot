/* 
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.7.1
 * Contact: support@bungie.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct DestinyDefinitionsDestinyItemTooltipNotification {
  #[serde(rename = "displayString")]
  display_string: Option<String>,
  #[serde(rename = "displayStyle")]
  display_style: Option<String>
}

impl DestinyDefinitionsDestinyItemTooltipNotification {
  pub fn new() -> DestinyDefinitionsDestinyItemTooltipNotification {
    DestinyDefinitionsDestinyItemTooltipNotification {
      display_string: None,
      display_style: None
    }
  }

  pub fn set_display_string(&mut self, display_string: String) {
    self.display_string = Some(display_string);
  }

  pub fn with_display_string(mut self, display_string: String) -> DestinyDefinitionsDestinyItemTooltipNotification {
    self.display_string = Some(display_string);
    self
  }

  pub fn display_string(&self) -> Option<&String> {
    self.display_string.as_ref()
  }

  pub fn reset_display_string(&mut self) {
    self.display_string = None;
  }

  pub fn set_display_style(&mut self, display_style: String) {
    self.display_style = Some(display_style);
  }

  pub fn with_display_style(mut self, display_style: String) -> DestinyDefinitionsDestinyItemTooltipNotification {
    self.display_style = Some(display_style);
    self
  }

  pub fn display_style(&self) -> Option<&String> {
    self.display_style.as_ref()
  }

  pub fn reset_display_style(&mut self) {
    self.display_style = None;
  }

}



