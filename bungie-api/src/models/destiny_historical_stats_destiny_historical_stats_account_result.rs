/* 
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.7.1
 * Contact: support@bungie.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct DestinyHistoricalStatsDestinyHistoricalStatsAccountResult {
  #[serde(rename = "mergedDeletedCharacters")]
  merged_deleted_characters: Option<::models::DestinyHistoricalStatsDestinyHistoricalStatsWithMerged>,
  #[serde(rename = "mergedAllCharacters")]
  merged_all_characters: Option<::models::DestinyHistoricalStatsDestinyHistoricalStatsWithMerged>,
  #[serde(rename = "characters")]
  characters: Option<Vec<::models::DestinyHistoricalStatsDestinyHistoricalStatsPerCharacter>>
}

impl DestinyHistoricalStatsDestinyHistoricalStatsAccountResult {
  pub fn new() -> DestinyHistoricalStatsDestinyHistoricalStatsAccountResult {
    DestinyHistoricalStatsDestinyHistoricalStatsAccountResult {
      merged_deleted_characters: None,
      merged_all_characters: None,
      characters: None
    }
  }

  pub fn set_merged_deleted_characters(&mut self, merged_deleted_characters: ::models::DestinyHistoricalStatsDestinyHistoricalStatsWithMerged) {
    self.merged_deleted_characters = Some(merged_deleted_characters);
  }

  pub fn with_merged_deleted_characters(mut self, merged_deleted_characters: ::models::DestinyHistoricalStatsDestinyHistoricalStatsWithMerged) -> DestinyHistoricalStatsDestinyHistoricalStatsAccountResult {
    self.merged_deleted_characters = Some(merged_deleted_characters);
    self
  }

  pub fn merged_deleted_characters(&self) -> Option<&::models::DestinyHistoricalStatsDestinyHistoricalStatsWithMerged> {
    self.merged_deleted_characters.as_ref()
  }

  pub fn reset_merged_deleted_characters(&mut self) {
    self.merged_deleted_characters = None;
  }

  pub fn set_merged_all_characters(&mut self, merged_all_characters: ::models::DestinyHistoricalStatsDestinyHistoricalStatsWithMerged) {
    self.merged_all_characters = Some(merged_all_characters);
  }

  pub fn with_merged_all_characters(mut self, merged_all_characters: ::models::DestinyHistoricalStatsDestinyHistoricalStatsWithMerged) -> DestinyHistoricalStatsDestinyHistoricalStatsAccountResult {
    self.merged_all_characters = Some(merged_all_characters);
    self
  }

  pub fn merged_all_characters(&self) -> Option<&::models::DestinyHistoricalStatsDestinyHistoricalStatsWithMerged> {
    self.merged_all_characters.as_ref()
  }

  pub fn reset_merged_all_characters(&mut self) {
    self.merged_all_characters = None;
  }

  pub fn set_characters(&mut self, characters: Vec<::models::DestinyHistoricalStatsDestinyHistoricalStatsPerCharacter>) {
    self.characters = Some(characters);
  }

  pub fn with_characters(mut self, characters: Vec<::models::DestinyHistoricalStatsDestinyHistoricalStatsPerCharacter>) -> DestinyHistoricalStatsDestinyHistoricalStatsAccountResult {
    self.characters = Some(characters);
    self
  }

  pub fn characters(&self) -> Option<&Vec<::models::DestinyHistoricalStatsDestinyHistoricalStatsPerCharacter>> {
    self.characters.as_ref()
  }

  pub fn reset_characters(&mut self) {
    self.characters = None;
  }

}



